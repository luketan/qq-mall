<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.honglinktech.zbgj.dao.CouponUserDao">

  <resultMap id="BaseResultMap" type="com.honglinktech.zbgj.entity.CouponUser">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="coupon_id" jdbcType="INTEGER" property="couponId" />
    <result column="checked" jdbcType="INTEGER" property="checked" />
    <result column="code" jdbcType="VARCHAR" property="code" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="use_time" jdbcType="TIMESTAMP" property="useTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>

  <sql id="Base_Column_List">
    id, user_id, coupon_id, checked, code, status, create_time
  </sql>

  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    SELECT 
    <include refid="Base_Column_List" />
    FROM t_coupon_user
    WHERE id = #{id,jdbcType=INTEGER}
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    DELETE FROM t_coupon_user
    WHERE id = #{id,jdbcType=INTEGER}
  </delete>

  <insert id="insertSelective" parameterType="com.honglinktech.zbgj.entity.CouponUser">
    INSERT INTO t_coupon_user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="couponId != null">
        coupon_id,
      </if>
      <if test="checked != null">
        checked,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="status != null">
        status,
      </if>
      create_time,
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        #{couponId,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        #{checked,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      now(),
    </trim>
  </insert>

  <update id="updateByPrimaryKeySelective" parameterType="com.honglinktech.zbgj.entity.CouponUser">
    UPDATE t_coupon_user
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="couponId != null">
        coupon_id = #{couponId,jdbcType=INTEGER},
      </if>
      <if test="checked != null">
        checked = #{checked,jdbcType=INTEGER},
      </if>
      <if test="code != null">
        code = #{code,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      create_time = now(),
    </set>
    WHERE id = #{id,jdbcType=INTEGER}
  </update>
  
  <!--*************************************************************************************************************-->
  <!---->
  <select id="findCouponCountByUser" parameterType="java.lang.Integer" resultType="java.lang.Integer">
    SELECT 
    	count(1) AS count 
    FROM t_coupon_user couUser 
    LEFT JOIN t_coupon c ON(couUser.coupon_id = c.id ) 
    WHERE couUser.user_id = #{userId,jdbcType=INTEGER} 
	    AND couUser.status = 0 
	    AND c.start_date <![CDATA[ <= ]]> CURDATE()
	    AND c.end_date &gt;= CURDATE()
  </select>
  <update id="useCoupon">
  	UPDATE t_coupon_user set status = 1 
  	WHERE user_id = #{userId,jdbcType=INTEGER} 
  	AND coupon_id = #{couponId,jdbcType=INTEGER}
  </update>
  <!---->
  <delete id="deleteByUserIdAndCouponId">
  	 DELETE FROM t_coupon_user
     WHERE user_id = #{userId, jdbcType=INTEGER}
     AND coupon_id = #{couponId, jdbcType=INTEGER}
  </delete>
  <select id="findUserCouponBeanByWhere" parameterType="map" resultType="com.honglinktech.zbgj.bean.CouponUserBean">
    SELECT
      cu.id as id,
      u.account as userName,
      u.phone as phone,
      c.`name` as couponName,
      cu.`status` as status,
      cu.`code` as code,
      c.goods_type as goodsType,
      gt.`name` as typeName,
      c.max as max,
      c.`value` as `value`,
      c.start_date as startDate,
      c.end_date as endDate,
      cu.`checked` as `checked`,
      cu.use_time as useTime,
      cu.update_time as updateTime,
      cu.create_time as createTime
    FROM t_coupon_user cu
    LEFT JOIN t_user u ON(cu.user_id = u.id )
    LEFT JOIN t_coupon c ON(cu.coupon_id = c.id )
    LEFT JOIN t_goods_type gt ON(c.goods_type = gt.id )
    WHERE 1=1
    <if test="keyword!=null">
      AND (u.account like CONCAT('%','${keyword}','%' )
      OR u.phone like CONCAT('%','${keyword}','%' )
            OR c.`name` like CONCAT('%','${keyword}','%' ))
    </if>
    <if test="status!=null">
      AND cu.status = #{status}
    </if>
    <if test="useTime !=null and useTime==true">
      AND c.start_date <![CDATA[ <= ]]> CURDATE()
      AND c.end_date <![CDATA[ >= ]]> CURDATE()
    </if>
    <if test="useTime !=null and useTime==false">
      AND (c.start_date <![CDATA[ > ]]> CURDATE()
            OR c.end_date <![CDATA[ < ]]> CURDATE())
    </if>
    <if test="orderBy!=null and asc != null">
      ORDER BY #{orderBy} #{asc}
    </if>
    <if test="orderBy==null or asc == null">
      ORDER BY cu.create_time DESC
    </if>
    <if test="start!=null and rows!=null">
      limit #{start},#{rows}
    </if>
  </select>
  <select id="findUserCouponVOById" parameterType="map" resultType="com.honglinktech.zbgj.vo.CouponUserVO">
    SELECT
    cu.id as id,
    u.account as userName,
    u.phone as phone,
    c.`name` as couponName,
    cu.`status` as status,
    cu.`code` as code,
    c.goods_type as goodsType,
    gt.`name` as typeName,
    c.max as max,
    c.`value` as `value`,
    c.start_date as startDate,
    c.end_date as endDate,
    cu.`checked` as `checked`,
    cu.use_time as useTime,
    cu.update_time as updateTime,
    cu.create_time as createTime
    FROM t_coupon_user cu
    LEFT JOIN t_user u ON(cu.user_id = u.id )
    LEFT JOIN t_coupon c ON(cu.coupon_id = c.id )
    LEFT JOIN t_goods_type gt ON(c.goods_type = gt.id )
    WHERE cu.id = #{id}
    limit 0,1
  </select>
  <select id="findUserCouponBeanById" parameterType="map" resultType="com.honglinktech.zbgj.bean.CouponUserBean">
    SELECT
    cu.id as id,
    u.account as userName,
    u.phone as phone,
    c.`name` as couponName,
    cu.`status` as status,
    cu.`code` as code,
    c.goods_type as goodsType,
    gt.`name` as typeName,
    c.max as max,
    c.`value` as `value`,
    c.start_date as startDate,
    c.end_date as endDate,
    cu.`checked` as `checked`,
    cu.use_time as useTime,
    cu.update_time as updateTime,
    cu.create_time as createTime
    FROM t_coupon_user cu
    LEFT JOIN t_user u ON(cu.user_id = u.id )
    LEFT JOIN t_coupon c ON(cu.coupon_id = c.id )
    LEFT JOIN t_goods_type gt ON(c.goods_type = gt.id )
    WHERE cu.id = #{id}
      limit 0,1
  </select>
  <select id="findUserCouponBeanCountByWhere" parameterType="map" resultType="java.lang.Integer">
    SELECT
      count(1)
    FROM t_coupon_user cu
    LEFT JOIN t_user u ON(cu.user_id = u.id )
    LEFT JOIN t_coupon c ON(cu.coupon_id = c.id )
    LEFT JOIN t_goods_type gt ON(c.goods_type = gt.id )
    WHERE 1=1
    <if test="keyword!=null">
      AND (u.account like CONCAT('%','${keyword}','%' )
      OR u.phone like CONCAT('%','${keyword}','%' )
      OR c.`name` like CONCAT('%','${keyword}','%' ))
    </if>
    <if test="status!=null">
      AND cu.status = #{status}
    </if>
    <if test="useTime !=null and useTime==true">
      AND c.start_date <![CDATA[ <= ]]> CURDATE()
      AND c.end_date <![CDATA[ >= ]]> CURDATE()
    </if>
    <if test="useTime !=null and useTime==false">
      AND (c.start_date <![CDATA[ > ]]> CURDATE()
      OR c.end_date <![CDATA[ < ]]> CURDATE())
    </if>
    <if test="orderBy!=null and asc != null">
      ORDER BY #{orderBy} #{asc}
    </if>
    <if test="orderBy==null or asc == null">
      ORDER BY cu.create_time DESC
    </if>
  </select>
</mapper>